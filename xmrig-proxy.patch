diff -ruN xmrig-proxy/CMakeLists.txt xmrig-proxy_new/CMakeLists.txt
--- xmrig-proxy/CMakeLists.txt	2018-06-30 11:02:17.862216824 +0800
+++ xmrig-proxy_new/CMakeLists.txt	2018-06-30 17:54:10.577904642 +0800
@@ -42,14 +42,12 @@
     src/core/Config.h
     src/core/ConfigLoader_platform.h
     src/core/Controller.h
-    src/donate.h
     src/interfaces/IEvent.h
     src/interfaces/IEventListener.h
     src/interfaces/ISplitter.h
     src/log/AccessLog.h
     src/log/ShareLog.h
     src/net/JobResult.h
-    src/net/strategies/DonateStrategy.h
     src/proxy/Addr.h
     src/proxy/Counters.h
     src/proxy/CustomDiff.h
@@ -107,7 +105,6 @@
     src/log/AccessLog.cpp
     src/log/ShareLog.cpp
     src/net/JobResult.cpp
-    src/net/strategies/DonateStrategy.cpp
     src/proxy/Counters.cpp
     src/proxy/CustomDiff.cpp
     src/proxy/Error.cpp
diff -ruN xmrig-proxy/README.md xmrig-proxy_new/README.md
--- xmrig-proxy/README.md	2018-06-30 11:02:17.862216824 +0800
+++ xmrig-proxy_new/README.md	2018-06-30 17:54:44.916874473 +0800
@@ -46,7 +46,6 @@
       --no-color           disable colored output
       --no-workers         disable per worker statistics
       --variant            algorithm PoW variant
-      --donate-level=N     donate level, default 2%
   -B, --background         run the miner in the background
   -c, --config=FILE        load a JSON-format configuration file
       --no-watch           disable configuration file watching
@@ -62,13 +61,6 @@
   -V, --version            output version information and exit
 ```
 
-## Donations
-
-Default donation fee is 2% can be reduced to 1% or disabled via `donate-level` option. Donation fee applies only if you use more than 256 miners.
-
-* XMR: `48edfHu7V9Z84YzzMa6fUueoELZ9ZRXq9VetWzYGzKt52XU5xvqgzYnDK9URnRoJMk1j8nLwEVsaSWJ4fhdUyZijBGUicoD`
-* BTC: `1P7ujsXeX7GxQwHNnJsRMgAdNkFZmNVqJT`
-
 ## Release checksums
 ### SHA-256
 ```
diff -ruN xmrig-proxy/src/api/ApiRouter.cpp xmrig-proxy_new/src/api/ApiRouter.cpp
--- xmrig-proxy/src/api/ApiRouter.cpp	2018-06-30 11:02:17.867216823 +0800
+++ xmrig-proxy_new/src/api/ApiRouter.cpp	2018-06-30 17:56:00.732808508 +0800
@@ -207,14 +207,6 @@
     doc.AddMember("mode",         rapidjson::StringRef(m_controller->config()->modeName()), allocator);
     doc.AddMember("ua",           rapidjson::StringRef(Platform::userAgent()), allocator);
     doc.AddMember("uptime",       stats.uptime(), allocator);
-    doc.AddMember("donate_level", m_controller->config()->donateLevel(), allocator);
-
-    if (stats.hashes && stats.donateHashes) {
-        doc.AddMember("donated", normalize((double) stats.donateHashes / stats.hashes * 100.0), allocator);
-    }
-    else {
-        doc.AddMember("donated", 0.0, allocator);
-    }
 }
 
 
@@ -273,7 +265,6 @@
     results.AddMember("avg_time",      stats.avgTime(), allocator);
     results.AddMember("latency",       stats.avgLatency(), allocator);
     results.AddMember("hashes_total",  stats.hashes, allocator);
-    results.AddMember("hashes_donate", stats.donateHashes, allocator);
 
     rapidjson::Value best(rapidjson::kArrayType);
     for (size_t i = 0; i < stats.topDiff.size(); ++i) {
diff -ruN xmrig-proxy/src/common/config/CommonConfig.cpp xmrig-proxy_new/src/common/config/CommonConfig.cpp
--- xmrig-proxy/src/common/config/CommonConfig.cpp	2018-06-30 11:02:17.867216823 +0800
+++ xmrig-proxy_new/src/common/config/CommonConfig.cpp	2018-06-30 18:19:27.794740267 +0800
@@ -31,7 +31,6 @@
 
 #include "common/config/CommonConfig.h"
 #include "common/log/Log.h"
-#include "donate.h"
 #include "rapidjson/document.h"
 #include "rapidjson/filewritestream.h"
 #include "rapidjson/prettywriter.h"
@@ -54,7 +53,6 @@
 #   endif
 
     m_apiPort(0),
-    m_donateLevel(kDefaultDonateLevel),
     m_printTime(60),
     m_retries(5),
     m_retryPause(5),
@@ -274,17 +272,6 @@
     case ApiRestrictedKey: /* --api-no-restricted */
         return parseBoolean(key, false);
 
-    case DonateLevelKey: /* --donate-level */
-#       ifdef XMRIG_PROXY_PROJECT
-        if (strncmp(arg, "minemonero.pro", 14) == 0) {
-            m_donateLevel = 0;
-            return true;
-        }
-#       endif
-        return parseUint64(key, strtol(arg, nullptr, 10));
-
-    default:
-        break;
     }
 
     return true;
@@ -326,12 +313,6 @@
         m_pools.back().algorithm().parseVariant(arg);
         break;
 
-    case DonateLevelKey: /* --donate-level */
-        if (arg >= kMinimumDonateLevel && arg <= 99) {
-            m_donateLevel = arg;
-        }
-        break;
-
     case ApiPort: /* --api-port */
         if (arg > 0 && arg <= 65536) {
             m_apiPort = arg;
diff -ruN xmrig-proxy/src/common/config/CommonConfig.h xmrig-proxy_new/src/common/config/CommonConfig.h
--- xmrig-proxy/src/common/config/CommonConfig.h	2018-06-30 11:02:17.867216823 +0800
+++ xmrig-proxy_new/src/common/config/CommonConfig.h	2018-06-30 18:20:13.514710624 +0800
@@ -55,7 +55,6 @@
     inline const char *userAgent() const           { return m_userAgent.data(); }
     inline const std::vector<Pool> &pools() const  { return m_activePools; }
     inline int apiPort() const                     { return m_apiPort; }
-    inline int donateLevel() const                 { return m_donateLevel; }
     inline int printTime() const                   { return m_printTime; }
     inline int retries() const                     { return m_retries; }
     inline int retryPause() const                  { return m_retryPause; }
@@ -90,7 +89,6 @@
     bool m_syslog;
     bool m_watch;
     int m_apiPort;
-    int m_donateLevel;
     int m_printTime;
     int m_retries;
     int m_retryPause;
diff -ruN xmrig-proxy/src/common/interfaces/IConfig.h xmrig-proxy_new/src/common/interfaces/IConfig.h
--- xmrig-proxy/src/common/interfaces/IConfig.h	2018-06-30 11:02:17.868216823 +0800
+++ xmrig-proxy_new/src/common/interfaces/IConfig.h	2018-06-30 18:21:31.539660337 +0800
@@ -45,7 +45,6 @@
         BackgroundKey     = 'B',
         ColorKey          = 1002,
         ConfigKey         = 'c',
-        DonateLevelKey    = 1003,
         HelpKey           = 'h',
         KeepAliveKey      = 'k',
         LogFileKey        = 'l',
diff -ruN xmrig-proxy/src/config.json xmrig-proxy_new/src/config.json
--- xmrig-proxy/src/config.json	2018-06-30 11:02:17.869216823 +0800
+++ xmrig-proxy_new/src/config.json	2018-06-30 17:56:16.338795036 +0800
@@ -15,7 +15,6 @@
     ],
     "colors": true,
     "custom-diff": 0,
-    "donate-level": 2,
     "log-file": null,
     "mode": "nicehash",
     "pools": [
@@ -35,4 +34,4 @@
     "verbose": false,
     "watch": true,
     "workers": true
-}
\ No newline at end of file
+}
diff -ruN xmrig-proxy/src/core/Config.cpp xmrig-proxy_new/src/core/Config.cpp
--- xmrig-proxy/src/core/Config.cpp	2018-06-30 11:02:17.869216823 +0800
+++ xmrig-proxy_new/src/core/Config.cpp	2018-06-30 17:57:40.194723278 +0800
@@ -32,7 +32,6 @@
 #include "common/xmrig.h"
 #include "core/Config.h"
 #include "core/ConfigCreator.h"
-#include "donate.h"
 #include "rapidjson/document.h"
 #include "rapidjson/filewritestream.h"
 #include "rapidjson/prettywriter.h"
@@ -102,7 +101,6 @@
     doc.AddMember("bind",         bind, allocator);
     doc.AddMember("colors",       isColors(), allocator);
     doc.AddMember("custom-diff",  diff(), allocator);
-    doc.AddMember("donate-level", donateLevel(), allocator);
     doc.AddMember("log-file",     logFile() ? Value(StringRef(logFile())).Move() : Value(kNullType).Move(), allocator);
     doc.AddMember("mode",         StringRef(modeName()), allocator);
 
diff -ruN xmrig-proxy/src/core/ConfigLoader_platform.h xmrig-proxy_new/src/core/ConfigLoader_platform.h
--- xmrig-proxy/src/core/ConfigLoader_platform.h	2018-06-30 11:02:17.869216823 +0800
+++ xmrig-proxy_new/src/core/ConfigLoader_platform.h	2018-06-30 18:00:37.665574800 +0800
@@ -61,7 +61,6 @@
       --no-color           disable colored output\n\
       --no-workers         disable per worker statistics\n\
       --variant            algorithm PoW variant\n\
-      --donate-level=N     donate level, default 2%%\n\
   -B, --background         run the miner in the background\n\
   -c, --config=FILE        load a JSON-format configuration file\n\
       --no-watch           disable configuration file watching\n\
@@ -99,7 +98,6 @@
     { "config",            1, nullptr, xmrig::IConfig::ConfigKey         },
     { "custom-diff",       1, nullptr, xmrig::IConfig::CustomDiffKey     },
     { "debug",             0, nullptr, xmrig::IConfig::DebugKey          },
-    { "donate-level",      1, nullptr, xmrig::IConfig::DonateLevelKey    },
     { "help",              0, nullptr, xmrig::IConfig::HelpKey           },
     { "keepalive",         2, nullptr, xmrig::IConfig::KeepAliveKey      },
     { "log-file",          1, nullptr, xmrig::IConfig::LogFileKey        },
@@ -133,7 +131,6 @@
     { "colors",           0, nullptr, xmrig::IConfig::ColorKey          },
     { "custom-diff",      1, nullptr, xmrig::IConfig::CustomDiffKey     },
     { "debug",            0, nullptr, xmrig::IConfig::DebugKey          },
-    { "donate-level",     1, nullptr, xmrig::IConfig::DonateLevelKey    },
     { "log-file",         1, nullptr, xmrig::IConfig::LogFileKey        },
     { "retries",          1, nullptr, xmrig::IConfig::RetriesKey        },
     { "retry-pause",      1, nullptr, xmrig::IConfig::RetryPauseKey     },
diff -ruN xmrig-proxy/src/core/ConfigLoader_static.h xmrig-proxy_new/src/core/ConfigLoader_static.h
--- xmrig-proxy/src/core/ConfigLoader_static.h	2018-06-30 11:02:17.869216823 +0800
+++ xmrig-proxy_new/src/core/ConfigLoader_static.h	2018-06-30 18:00:20.559588917 +0800
@@ -64,7 +64,6 @@
       --no-color           disable colored output\n\
       --no-workers         disable per worker statistics\n\
       --variant            algorithm PoW variant\n\
-      --donate-level=N     donate level, default 2%%\n\
   -B, --background         run the miner in the background\n\
   -c, --config=FILE        load a JSON-format configuration file\n\
       --no-watch           disable configuration file watching\n\
@@ -102,7 +101,6 @@
     { "config",            1, nullptr, 'c'  },
     { "custom-diff",       1, nullptr, 1102 },
     { "debug",             0, nullptr, 1101 },
-    { "donate-level",      1, nullptr, 1003 },
     { "help",              0, nullptr, 'h'  },
     { "keepalive",         0, nullptr ,'k'  },
     { "log-file",          1, nullptr, 'l'  },
@@ -135,7 +133,6 @@
     { "colors",           0, nullptr, 2000 },
     { "custom-diff",      1, nullptr, 1102 },
     { "debug",            0, nullptr, 1101 },
-    { "donate-level",     1, nullptr, 1003 },
     { "log-file",         1, nullptr, 'l'  },
     { "retries",          1, nullptr, 'r'  },
     { "retry-pause",      1, nullptr, 'R'  },
diff -ruN xmrig-proxy/src/donate.h xmrig-proxy_new/src/donate.h
--- xmrig-proxy/src/donate.h	2018-06-30 11:02:17.869216823 +0800
+++ xmrig-proxy_new/src/donate.h	1970-01-01 08:00:00.000000000 +0800
@@ -1,49 +0,0 @@
-/* XMRig
- * Copyright 2010      Jeff Garzik <jgarzik@pobox.com>
- * Copyright 2012-2014 pooler      <pooler@litecoinpool.org>
- * Copyright 2014      Lucas Jones <https://github.com/lucasjones>
- * Copyright 2014-2016 Wolf9466    <https://github.com/OhGodAPet>
- * Copyright 2016      Jay D Dee   <jayddee246@gmail.com>
- * Copyright 2017-2018 XMR-Stak    <https://github.com/fireice-uk>, <https://github.com/psychocrypt>
- * Copyright 2016-2018 XMRig       <https://github.com/xmrig>, <support@xmrig.com>
- *
- *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
- *
- *   This program is distributed in the hope that it will be useful,
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- *   GNU General Public License for more details.
- *
- *   You should have received a copy of the GNU General Public License
- *   along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#ifndef __DONATE_H__
-#define __DONATE_H__
-
-
-/*
- * Dev donation.
- *
- * Percentage of your hashing power that you want to donate to the developer, can be 0 if you don't want to do that.
- *
- * If you plan on changing this setting to 0 please consider making a one off donation to my wallet:
- * XMR: 48edfHu7V9Z84YzzMa6fUueoELZ9ZRXq9VetWzYGzKt52XU5xvqgzYnDK9URnRoJMk1j8nLwEVsaSWJ4fhdUyZijBGUicoD
- * BTC: 1P7ujsXeX7GxQwHNnJsRMgAdNkFZmNVqJT
- *
- * How it works:
- * First pool connection (up to 256 workers) always without fee.
- * Other connections first randomly switch to dev pool in range from 50 to 150 minutes, to reduce dev pool peak load.
- * Stays on dev pool at least kDonateLevel minutes.
- * Choice next donation time, with overime compensation. In proxy no way to use precise donation time.
- * You can check actual donation via API.
- */
-constexpr const int kDefaultDonateLevel = 2;
-constexpr const int kMinimumDonateLevel = 0;
-constexpr const uint64_t kFreeThreshold = 256;
-
-
-#endif /* __DONATE_H__ */
diff -ruN xmrig-proxy/src/log/ShareLog.cpp xmrig-proxy_new/src/log/ShareLog.cpp
--- xmrig-proxy/src/log/ShareLog.cpp	2018-06-30 11:02:17.870216823 +0800
+++ xmrig-proxy_new/src/log/ShareLog.cpp	2018-06-30 18:01:53.578512655 +0800
@@ -95,10 +95,6 @@
 
 void ShareLog::reject(const AcceptEvent *event)
 {
-    if (event->isDonate()) {
-        return;
-    }
-
     LOG_INFO(isColors() ? "#%03u \x1B[01;31mrejected\x1B[0m (%" PRId64 "/%" PRId64 "+%" PRId64 ") diff \x1B[01;37m%u\x1B[0m ip \x1B[01;37m%s \x1B[31m\"%s\"\x1B[0m \x1B[01;30m(%" PRId64 " ms)"
                         : "#%03u rejected (%" PRId64 "/%" PRId64 "+%" PRId64 ") diff %u ip %s \"%s\" (%" PRId64 " ms)",
              event->mapperId(), m_stats.data().accepted, m_stats.data().rejected, m_stats.data().invalid, event->result.diff, event->ip(), event->error(), event->result.elapsed);
diff -ruN xmrig-proxy/src/net/strategies/DonateStrategy.cpp xmrig-proxy_new/src/net/strategies/DonateStrategy.cpp
--- xmrig-proxy/src/net/strategies/DonateStrategy.cpp	2018-06-30 11:02:17.870216823 +0800
+++ xmrig-proxy_new/src/net/strategies/DonateStrategy.cpp	1970-01-01 08:00:00.000000000 +0800
@@ -1,173 +0,0 @@
-/* XMRig
- * Copyright 2010      Jeff Garzik <jgarzik@pobox.com>
- * Copyright 2012-2014 pooler      <pooler@litecoinpool.org>
- * Copyright 2014      Lucas Jones <https://github.com/lucasjones>
- * Copyright 2014-2016 Wolf9466    <https://github.com/OhGodAPet>
- * Copyright 2016      Jay D Dee   <jayddee246@gmail.com>
- * Copyright 2017-2018 XMR-Stak    <https://github.com/fireice-uk>, <https://github.com/psychocrypt>
- * Copyright 2016-2018 XMRig       <https://github.com/xmrig>, <support@xmrig.com>
- *
- *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
- *
- *   This program is distributed in the hope that it will be useful,
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- *   GNU General Public License for more details.
- *
- *   You should have received a copy of the GNU General Public License
- *   along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-
-#include "common/crypto/keccak.h"
-#include "common/interfaces/IStrategyListener.h"
-#include "common/net/Client.h"
-#include "common/Platform.h"
-#include "common/xmrig.h"
-#include "core/Config.h"
-#include "core/Controller.h"
-#include "donate.h"
-#include "net/strategies/DonateStrategy.h"
-#include "proxy/Counters.h"
-#include "proxy/StatsData.h"
-
-
-static inline float randomf(float min, float max) {
-    return (max - min) * ((((float) rand()) / (float) RAND_MAX)) + min;
-}
-
-
-DonateStrategy::DonateStrategy(xmrig::Controller *controller, IStrategyListener *listener) :
-    m_active(false),
-    m_listener(listener),
-    m_donateTicks(0),
-    m_target(0),
-    m_ticks(0),
-    m_controller(controller)
-{
-    uint8_t hash[200];
-    char userId[65] = { 0 };
-    const char *user = controller->config()->pools().front().user();
-
-    xmrig::keccak(reinterpret_cast<const uint8_t *>(user), strlen(user), hash);
-    Job::toHex(hash, 32, userId);
-
-    m_client = new Client(-1, Platform::userAgent(), this);
-    m_client->setPool(Pool("proxy.fee.xmrig.com", 9999, userId, nullptr));
-    m_client->setRetryPause(1000);
-    m_client->setAlgo(controller->config()->algorithm());
-    m_client->setQuiet(true);
-
-    m_target = (100 - controller->config()->donateLevel()) * 60 * randomf(0.5, 1.5);
-}
-
-
-DonateStrategy::~DonateStrategy()
-{
-    m_client->deleteLater();
-}
-
-
-bool DonateStrategy::reschedule()
-{
-    const uint64_t level = m_controller->config()->donateLevel() * 60;
-    if (m_donateTicks < level) {
-        return false;
-    }
-
-    m_target = m_ticks + ((6000 - level) * ((double) m_donateTicks / level));
-    m_active = false;
-
-    stop();
-    return true;
-}
-
-
-void DonateStrategy::save(const Client *client, const Job &job)
-{
-    m_pending.job  = job;
-    m_pending.host = client->host();
-    m_pending.port = client->port();
-}
-
-
-void DonateStrategy::setAlgo(const xmrig::Algorithm &algorithm)
-{
-    m_client->setAlgo(algorithm);
-}
-
-
-int64_t DonateStrategy::submit(const JobResult &result)
-{
-    return m_client->submit(result);
-}
-
-
-void DonateStrategy::connect()
-{
-}
-
-
-void DonateStrategy::stop()
-{
-    m_donateTicks = 0;
-    m_client->disconnect();
-}
-
-
-void DonateStrategy::tick(uint64_t now)
-{
-    m_client->tick(now);
-
-    m_ticks++;
-
-    if (m_ticks == m_target) {
-        if (kFreeThreshold > 0 && Counters::miners() < kFreeThreshold) {
-            m_target += 600;
-            return;
-        }
-
-        m_pending.job.reset();
-        m_client->connect();
-    }
-
-    if (isActive()) {
-        m_donateTicks++;
-    }
-}
-
-
-void DonateStrategy::onClose(Client *client, int failures)
-{
-    if (!isActive()) {
-        return;
-    }
-
-    m_active = false;
-    m_listener->onPause(this);
-}
-
-
-void DonateStrategy::onJobReceived(Client *client, const Job &job)
-{
-    if (!isActive()) {
-        m_active = true;
-        m_listener->onActive(this, client);
-    }
-
-    m_listener->onJob(this, client, job);
-}
-
-
-void DonateStrategy::onLoginSuccess(Client *client)
-{
-}
-
-
-void DonateStrategy::onResultAccepted(Client *client, const SubmitResult &result, const char *error)
-{
-    m_listener->onResultAccepted(this, client, result, error);
-}
diff -ruN xmrig-proxy/src/net/strategies/DonateStrategy.h xmrig-proxy_new/src/net/strategies/DonateStrategy.h
--- xmrig-proxy/src/net/strategies/DonateStrategy.h	2018-06-30 11:02:17.870216823 +0800
+++ xmrig-proxy_new/src/net/strategies/DonateStrategy.h	1970-01-01 08:00:00.000000000 +0800
@@ -1,89 +0,0 @@
-/* XMRig
- * Copyright 2010      Jeff Garzik <jgarzik@pobox.com>
- * Copyright 2012-2014 pooler      <pooler@litecoinpool.org>
- * Copyright 2014      Lucas Jones <https://github.com/lucasjones>
- * Copyright 2014-2016 Wolf9466    <https://github.com/OhGodAPet>
- * Copyright 2016      Jay D Dee   <jayddee246@gmail.com>
- * Copyright 2017-2018 XMR-Stak    <https://github.com/fireice-uk>, <https://github.com/psychocrypt>
- * Copyright 2016-2018 XMRig       <https://github.com/xmrig>, <support@xmrig.com>
- *
- *   This program is free software: you can redistribute it and/or modify
- *   it under the terms of the GNU General Public License as published by
- *   the Free Software Foundation, either version 3 of the License, or
- *   (at your option) any later version.
- *
- *   This program is distributed in the hope that it will be useful,
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- *   GNU General Public License for more details.
- *
- *   You should have received a copy of the GNU General Public License
- *   along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-#ifndef __DONATESTRATEGY_H__
-#define __DONATESTRATEGY_H__
-
-
-#include "common/interfaces/IClientListener.h"
-#include "common/interfaces/IStrategy.h"
-#include "common/utils/c_str.h"
-
-
-class Client;
-class IStrategyListener;
-class Url;
-
-
-namespace xmrig {
-    class Controller;
-}
-
-
-class DonateStrategy : public IStrategy, public IClientListener
-{
-public:
-    struct Pending
-    {
-        Job job;
-        xmrig::c_str host;
-        int port;
-    };
-
-
-    DonateStrategy(xmrig::Controller *controller, IStrategyListener *listener);
-    ~DonateStrategy();
-
-    bool reschedule();
-    void save(const Client *client, const Job &job);
-    void setAlgo(const xmrig::Algorithm &algorithm);
-
-    inline bool hasPendingJob() const     { return m_pending.job.isValid(); }
-    inline const Pending &pending() const { return m_pending; }
-
-    inline bool isActive() const override { return m_active; }
-    inline void resume() override         {}
-
-    int64_t submit(const JobResult &result) override;
-    void connect() override;
-    void stop() override;
-    void tick(uint64_t now) override;
-
-protected:
-    void onClose(Client *client, int failures) override;
-    void onJobReceived(Client *client, const Job &job) override;
-    void onLoginSuccess(Client *client) override;
-    void onResultAccepted(Client *client, const SubmitResult &result, const char *error) override;
-
-private:
-    bool m_active;
-    Client *m_client;
-    IStrategyListener *m_listener;
-    Pending m_pending;
-    uint64_t m_donateTicks;
-    uint64_t m_target;
-    uint64_t m_ticks;
-    xmrig::Controller *m_controller;
-};
-
-#endif /* __SINGLEPOOLSTRATEGY_H__ */
diff -ruN xmrig-proxy/src/proxy/events/AcceptEvent.h xmrig-proxy_new/src/proxy/events/AcceptEvent.h
--- xmrig-proxy/src/proxy/events/AcceptEvent.h	2018-06-30 11:02:17.871216823 +0800
+++ xmrig-proxy_new/src/proxy/events/AcceptEvent.h	2018-06-30 18:04:19.920395095 +0800
@@ -35,33 +35,30 @@
 class AcceptEvent : public MinerEvent
 {
 public:
-    static inline bool start(size_t mapperId, Miner *miner, const SubmitResult &result, bool donate, const char *error = nullptr)
+    static inline bool start(size_t mapperId, Miner *miner, const SubmitResult &result, const char *error = nullptr)
     {
-        return exec(new (m_buf) AcceptEvent(mapperId, miner, result, donate, error));
+        return exec(new (m_buf) AcceptEvent(mapperId, miner, result, error));
     }
 
 
     const SubmitResult &result;
 
 
-    inline bool isDonate() const            { return m_donate; }
     inline bool isRejected() const override { return m_error != nullptr; }
     inline const char *error() const        { return m_error; }
     inline size_t mapperId() const          { return m_mapperId; }
 
 
 protected:
-    inline AcceptEvent(size_t mapperId, Miner *miner, const SubmitResult &result, bool donate, const char *error)
+    inline AcceptEvent(size_t mapperId, Miner *miner, const SubmitResult &result, const char *error)
         : MinerEvent(AcceptType, miner),
           result(result),
-          m_donate(donate),
           m_error(error),
           m_mapperId(mapperId)
     {}
 
 
 private:
-    bool m_donate;
     const char *m_error;
     size_t m_mapperId;
 };
diff -ruN xmrig-proxy/src/proxy/splitters/nicehash/NonceMapper.cpp xmrig-proxy_new/src/proxy/splitters/nicehash/NonceMapper.cpp
--- xmrig-proxy/src/proxy/splitters/nicehash/NonceMapper.cpp	2018-06-30 11:02:17.872216823 +0800
+++ xmrig-proxy_new/src/proxy/splitters/nicehash/NonceMapper.cpp	2018-06-30 18:51:51.473986023 +0800
@@ -34,7 +34,6 @@
 #include "core/Config.h"
 #include "core/Controller.h"
 #include "net/JobResult.h"
-#include "net/strategies/DonateStrategy.h"
 #include "proxy/Counters.h"
 #include "proxy/Error.h"
 #include "proxy/events/AcceptEvent.h"
@@ -45,7 +44,6 @@
 
 
 NonceMapper::NonceMapper(size_t id, xmrig::Controller *controller) :
-    m_donate(nullptr),
     m_suspended(0),
     m_pending(nullptr),
     m_id(id),
@@ -54,9 +52,6 @@
     m_storage  = new NonceStorage();
     m_strategy = createStrategy(controller->config()->pools());
 
-    if (controller->config()->donateLevel() > 0) {
-        m_donate = new DonateStrategy(controller, this);
-    }
 }
 
 
@@ -65,7 +60,6 @@
     delete m_pending;
     delete m_strategy;
     delete m_storage;
-    delete m_donate;
 }
 
 
@@ -143,7 +137,7 @@
     JobResult req = event->request;
     req.diff = m_storage->job().diff();
 
-    IStrategy *strategy = m_donate && m_donate->isActive() ? m_donate : m_strategy;
+    IStrategy *strategy = m_strategy;
 
     m_results[strategy->submit(req)] = SubmitCtx(req.id, event->miner()->id());
 }
@@ -153,14 +147,6 @@
 {
     m_strategy->tick(now);
 
-    if (m_donate) {
-        m_donate->tick(now);
-
-        if (m_donate->isActive() && m_donate->hasPendingJob() && m_donate->reschedule()) {
-            const auto &pending = m_donate->pending();
-            setJob(pending.host.data(), pending.port, pending.job);
-        }
-    }
 }
 
 
@@ -200,15 +186,6 @@
 
 void NonceMapper::onJob(IStrategy *strategy, Client *client, const Job &job)
 {
-    if (m_donate) {
-        if (m_donate->isActive() && client->id() != -1 && !m_donate->reschedule()) {
-            m_donate->save(client, job);
-            return;
-        }
-
-        m_donate->setAlgo(job.algorithm());
-    }
-
     setJob(client->host(), client->port(), job);
 }
 
@@ -227,7 +204,7 @@
 {
     const SubmitCtx ctx = submitCtx(result.seq);
 
-    AcceptEvent::start(m_id, ctx.miner, result, client->id() == -1, error);
+    AcceptEvent::start(m_id, ctx.miner, result, error);
 
     if (!ctx.miner) {
         return;
@@ -284,9 +261,6 @@
     m_suspended = 0;
     m_strategy->connect();
 
-    if (m_donate) {
-        m_donate->connect();
-    }
 }
 
 
@@ -309,7 +283,4 @@
     m_storage->reset();
     m_strategy->stop();
 
-    if (m_donate) {
-        m_donate->stop();
-    }
 }
diff -ruN xmrig-proxy/src/proxy/splitters/nicehash/NonceMapper.h xmrig-proxy_new/src/proxy/splitters/nicehash/NonceMapper.h
--- xmrig-proxy/src/proxy/splitters/nicehash/NonceMapper.h	2018-06-30 11:02:17.872216823 +0800
+++ xmrig-proxy_new/src/proxy/splitters/nicehash/NonceMapper.h	2018-06-30 18:10:06.237128102 +0800
@@ -35,7 +35,6 @@
 #include "common/net/Pool.h"
 
 
-class DonateStrategy;
 class IStrategy;
 class JobResult;
 class LoginRequest;
@@ -99,7 +98,6 @@
     void setJob(const char *host, int port, const Job &job);
     void suspend();
 
-    DonateStrategy *m_donate;
     int m_suspended;
     IStrategy *m_pending;
     IStrategy *m_strategy;
diff -ruN xmrig-proxy/src/proxy/splitters/simple/SimpleMapper.cpp xmrig-proxy_new/src/proxy/splitters/simple/SimpleMapper.cpp
--- xmrig-proxy/src/proxy/splitters/simple/SimpleMapper.cpp	2018-06-30 11:02:17.872216823 +0800
+++ xmrig-proxy_new/src/proxy/splitters/simple/SimpleMapper.cpp	2018-06-30 18:12:39.034015056 +0800
@@ -34,7 +34,6 @@
 #include "core/Config.h"
 #include "core/Controller.h"
 #include "net/JobResult.h"
-#include "net/strategies/DonateStrategy.h"
 #include "proxy/Counters.h"
 #include "proxy/Error.h"
 #include "proxy/events/AcceptEvent.h"
@@ -45,7 +44,6 @@
 
 SimpleMapper::SimpleMapper(uint64_t id, xmrig::Controller *controller) :
     m_active(false),
-    m_donate(nullptr),
     m_pending(nullptr),
     m_miner(nullptr),
     m_id(id),
@@ -64,7 +62,6 @@
 {
     delete m_pending;
     delete m_strategy;
-    delete m_donate;
 }
 
 
@@ -108,10 +105,6 @@
     if (m_pending) {
         m_pending->stop();
     }
-
-    if (m_donate) {
-        m_donate->stop();
-    }
 }
 
 
@@ -132,7 +125,7 @@
     JobResult req = event->request;
     req.diff = m_job.diff();
 
-    IStrategy *strategy = m_donate && m_donate->isActive() ? m_donate : m_strategy;
+    IStrategy *strategy = m_strategy;
 
     if (strategy) {
         strategy->submit(req);
@@ -147,10 +140,6 @@
     if (!m_miner) {
         m_idleTime++;
     }
-
-    if (m_donate) {
-        m_donate->tick(now);
-    }
 }
 
 
@@ -184,10 +173,6 @@
                  m_id, client->host(), client->port(), job.diff(), job.algorithm().shortName());
     }
 
-    if (m_donate && m_donate->isActive() && client->id() != -1 && !m_donate->reschedule()) {
-        return;
-    }
-
     setJob(job);
 }
 
@@ -202,7 +187,7 @@
 
 void SimpleMapper::onResultAccepted(IStrategy *strategy, Client *client, const SubmitResult &result, const char *error)
 {
-    AcceptEvent::start(m_id, m_miner, result, client->id() == -1, error);
+    AcceptEvent::start(m_id, m_miner, result, error);
 
     if (!m_miner) {
         return;
@@ -255,9 +240,6 @@
 {
     m_strategy->connect();
 
-    if (m_donate) {
-        m_donate->connect();
-    }
 }
 
 
diff -ruN xmrig-proxy/src/proxy/splitters/simple/SimpleMapper.h xmrig-proxy_new/src/proxy/splitters/simple/SimpleMapper.h
--- xmrig-proxy/src/proxy/splitters/simple/SimpleMapper.h	2018-06-30 11:02:17.872216823 +0800
+++ xmrig-proxy_new/src/proxy/splitters/simple/SimpleMapper.h	2018-06-30 18:13:37.648972432 +0800
@@ -35,7 +35,6 @@
 #include "common/net/Pool.h"
 
 
-class DonateStrategy;
 class IStrategy;
 class JobResult;
 class LoginRequest;
@@ -85,7 +84,6 @@
 
     bool m_active;
     bool m_dirty;
-    DonateStrategy *m_donate;
     IStrategy *m_pending;
     IStrategy *m_strategy;
     Job m_job;
diff -ruN xmrig-proxy/src/proxy/Stats.cpp xmrig-proxy_new/src/proxy/Stats.cpp
--- xmrig-proxy/src/proxy/Stats.cpp	2018-06-30 11:02:17.871216823 +0800
+++ xmrig-proxy_new/src/proxy/Stats.cpp	2018-06-30 18:14:14.431947079 +0800
@@ -113,10 +113,6 @@
     m_data.accepted++;
     m_data.hashes += event->result.diff;
 
-    if (event->isDonate()) {
-        m_data.donateHashes += event->result.diff;
-    }
-
     Counters::accepted++;
 
     const size_t ln = m_data.topDiff.size() - 1;
@@ -131,9 +127,5 @@
 
 void Stats::reject(const AcceptEvent *event)
 {
-    if (event->isDonate()) {
-        return;
-    }
-
     m_data.rejected++;
 }
diff -ruN xmrig-proxy/src/proxy/StatsData.h xmrig-proxy_new/src/proxy/StatsData.h
--- xmrig-proxy/src/proxy/StatsData.h	2018-06-30 11:02:17.871216823 +0800
+++ xmrig-proxy_new/src/proxy/StatsData.h	2018-06-30 18:14:36.226932482 +0800
@@ -40,7 +40,6 @@
     inline StatsData() :
         accepted(0),
         connections(0),
-        donateHashes(0),
         expired(0),
         hashes(0),
         invalid(0),
@@ -91,7 +90,6 @@
     std::vector<uint16_t> latency;
     uint64_t accepted;
     uint64_t connections;
-    uint64_t donateHashes;
     uint64_t expired;
     uint64_t hashes;
     uint64_t invalid;
